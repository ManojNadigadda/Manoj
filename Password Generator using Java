import java.security.SecureRandom;

public class PasswordGenerator {
    private static final String UPPER = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private static final String LOWER = "abcdefghijklmnopqrstuvwxyz";
    private static final String DIGITS = "0123456789";
    private static final String SPECIAL = "!@#$%^&*()-_=+<>?";

    public static void main(String[] args) {
        int length = 12; // default password length

        // If a length is provided as command-line argument, use it
        if (args.length > 0) {
            try {
                length = Integer.parseInt(args[0]);
            } catch (NumberFormatException e) {
                System.out.println("Invalid length provided. Using default length of 12 characters.");
            }
        }

        String password = generatePassword(length);
        System.out.println("Generated password: " + password);
    }

    private static String generatePassword(int length) {
        StringBuilder password = new StringBuilder();
        SecureRandom random = new SecureRandom();

        // Use at least one character from each character set
        password.append(UPPER.charAt(random.nextInt(UPPER.length())));
        password.append(LOWER.charAt(random.nextInt(LOWER.length())));
        password.append(DIGITS.charAt(random.nextInt(DIGITS.length())));
        password.append(SPECIAL.charAt(random.nextInt(SPECIAL.length())));

        // Fill the rest of the password with random characters
        for (int i = 4; i < length; i++) {
            String charSet = UPPER + LOWER + DIGITS + SPECIAL;
            password.append(charSet.charAt(random.nextInt(charSet.length())));
        }

        // Shuffle the characters in the password
        String shuffledPassword = shuffleString(password.toString());
        return shuffledPassword;
    }

    // Shuffle the characters in a string
    private static String shuffleString(String string) {
        char[] charArray = string.toCharArray();
        SecureRandom random = new SecureRandom();

        for (int i = 0; i < charArray.length; i++) {
            int randomIndex = random.nextInt(charArray.length);
            char temp = charArray[i];
            charArray[i] = charArray[randomIndex];
            charArray[randomIndex] = temp;
        }

        return new String(charArray);
    }
}
